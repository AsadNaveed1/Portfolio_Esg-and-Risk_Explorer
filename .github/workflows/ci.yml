name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: portfolio_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root --password=rootpass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Start MinIO
        run: |
          docker run -d \
            --name minio \
            -p 9000:9000 \
            -p 9001:9001 \
            -e MINIO_ROOT_USER=minioadmin \
            -e MINIO_ROOT_PASSWORD=minioadmin \
            minio/minio server /data --console-address ":9001"

      - name: Wait for services
        run: |
          # Wait for MySQL
          for i in {1..20}; do
            if mysqladmin ping -h127.0.0.1 -uroot -prootpass >/dev/null 2>&1; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 5
          done

          # Wait for MinIO
          for i in {1..20}; do
            if curl -f http://localhost:9000/minio/health/live >/dev/null 2>&1; then
              echo "MinIO is up!"
              break
            fi
            echo "Waiting for MinIO..."
            sleep 5
          done

      - name: Build with Maven
        run: |
          cd server
          mvn -B clean verify -Dspring.profiles.active=test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/portfolio_db
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: rootpass
          MINIO_URL: http://127.0.0.1:9000
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
          MINIO_BUCKET: portfolios